using UnityEngine;

[RequireComponent(typeof(PlayerMotor))]
public class PlayerMotor : MonoBehaviour
{
    private Vector3 velocity = Vector3.zero;
    private Vector3 rotation = Vector3.zero;
    private float cameraRotation = 0f;
    private float currentCameraRotation = 0f;

    [SerializeField]
    private float cameraRotationLimit = 85f;

    [SerializeField]
    private Camera playerCamera = null;

    private Rigidbody rb;
    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    public void Move(Vector3 velocityController)
    {
        velocity = velocityController;
    }

    public void Rotate(Vector3 rotateController)
    {
        rotation = rotateController;
    }

    public void RotateCamera(float cameraController)
    {
        cameraRotation = cameraController;
    }

    private void FixedUpdate()
    {
        PerformMovement();
        PerformRotation();
    }

    void PerformMovement()
    {
        if(velocity != Vector3.zero)
        {
            rb.MovePosition(rb.position + velocity * Time.fixedDeltaTime);
        }
    }

    void PerformRotation()
    {
        rb.MoveRotation(rb.rotation * Quaternion.Euler(rotation));
        if(playerCamera != null)
        {
            currentCameraRotation -= cameraRotation;
            currentCameraRotation = Mathf.Clamp(currentCameraRotation, -cameraRotationLimit, cameraRotationLimit);

            playerCamera.transform.localEulerAngles = new Vector3(currentCameraRotation, 0f, 0f);
        }
    }
}
